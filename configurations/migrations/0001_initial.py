# Generated by Django 5.2.4 on 2025-08-05 22:41

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CriteresNotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('valeur_mini', models.IntegerField()),
                ('valeur_maxi', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Critère de notation',
                'verbose_name_plural': 'Critères de notation',
                'ordering': ['id', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='GroupePage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, unique=True)),
                ('libelle', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('ordre', models.IntegerField(default=0, help_text="Ordre d'affichage dans la navbar")),
            ],
            options={
                'ordering': ['ordre', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('code_postal', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator('^\\d{5}$', 'Un code postal français contient au moins 5 caractères')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Site',
                'verbose_name_plural': 'Sites',
                'ordering': ['id', 'code_postal'],
            },
        ),
        migrations.CreateModel(
            name='Societe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Société',
                'verbose_name_plural': 'Sociétés',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, unique=True)),
                ('libelle', models.CharField(max_length=255)),
                ('nom_url', models.CharField(help_text="Nom de l'URL Django", max_length=100)),
                ('ordre', models.IntegerField(default=0, help_text='Ordre dans le groupe')),
                ('is_active', models.BooleanField(default=True)),
                ('groupe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='configurations.groupepage')),
            ],
            options={
                'ordering': ['groupe', 'ordre', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='Conducteur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('erp_id', models.IntegerField(unique=True)),
                ('nom', models.CharField(max_length=255)),
                ('prenom', models.CharField(max_length=255)),
                ('date_naissance', models.DateField(blank=True, null=True)),
                ('date_entree', models.DateField()),
                ('date_sortie', models.DateField(blank=True, null=True)),
                ('actif_p', models.BooleanField(default=True, verbose_name='Actif')),
                ('interim_p', models.BooleanField(default=False, verbose_name='Intérim')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurations.service')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurations.site')),
                ('societe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurations.societe')),
            ],
            options={
                'verbose_name': 'Conducteur',
                'verbose_name_plural': 'Conducteurs',
                'ordering': ['nom', 'prenom'],
            },
        ),
        migrations.CreateModel(
            name='AssociationUtilisateurGroupe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('page_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurations.groupepage')),
            ],
            options={
                'unique_together': {('user', 'page_group')},
            },
        ),
    ]
